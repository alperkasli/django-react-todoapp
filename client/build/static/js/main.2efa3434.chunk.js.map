{"version":3,"sources":["store/User/types.js","store/Task/types.js","store/Task/reducers.js","store/User/reducers.js","helpers/browserHistory.js","store/index.js","api/index.js","api/Todos.js","api/Account.js","store/User/action.js","components/Navbar.js","store/Task/actions.js","components/TaskCategories.js","components/TaskForm.js","components/ShareTaskPopover.js","components/TaskItem.js","components/TaskList.js","views/Home.js","views/Login.js","views/Register.js","views/SharedTasks.js","helpers/AuthRoute.js","views/index.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN","LOGOUT","GET_ALL_USERS","GET_TASKS","GET_CATEGORIES","GET_SHARED_TASKS","taskInitialState","tasks","categories","sharedTasksInitialState","user","JSON","parse","localStorage","getItem","initialState","token","username","email","authenticated","undefined","allUsersInitialState","history","createBrowserHistory","rootReducer","combineReducers","state","action","type","payload","task","allUsers","sharedTasks","router","connectRouter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","routerMiddleware","API","method","url","config","this","fetch","headers","then","response","ok","json","Promise","reject","statusText","todoApis","formData","body","stringify","taskId","AccountApis","loginAction","setItem","logoutAction","clear","getAllUsersAction","users","connect","dispatch","logoutDispatch","historyPush","route","push","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","to","NavbarText","Button","setTasksAction","setCategoriesDispatch","setCategoriesAction","handleCategorySelect","hideLabel","selectedCategory","isLoading","setIsloading","value","setValue","getAllCategories","res","map","opt","label","name","id","catch","err","console","log","useEffect","length","Label","htmlFor","isClearable","isDisabled","onChange","newValue","actionMeta","previousValues","category_id","onCreateOption","inputValue","category","options","placeholder","TaskForm","submitCallback","title","priority","description","setFormData","handleChange","e","target","Form","onSubmit","preventDefault","FormGroup","for","Input","Row","form","Col","md","style","minHeight","whiteSpace","selectedUser","setSelectedUser","fetching","setFetching","filteredUsers","setFilteredUsers","userFilter","setUserFilter","togglePopover","Popover","placement","toggle","trigger","Card","width","CardBody","InputGroup","InputGroupAddon","addonType","InputGroupText","filterText","filtered","filter","toLowerCase","includes","ListGroup","maxHeight","overflow","ListGroupItem","key","userId","disabled","taskToId","Spinner","TaskItem","taskDetails","getTaskList","taskSharedBy","taskData","setTaskData","completed","due_date","isEditView","setIsEditView","deleteTaskPopover","setDeleteTaskPopover","handleTaskComplete","handleDeleteTaskPopover","zIndex","Badge","cursor","PopoverBody","myTasks","setTasksDispatch","getAllUsersDispatch","setSharedTasksDispatch","sharedTasksView","handleGetTasks","handleGetUsers","handleGetSharedTasks","sharedTask","shared_by","Alert","setTasks","collapseOpen","setCollapseOpen","toggleCollapse","pill","loginDispatch","password","errorMessage","setErrorMessage","height","Jumbotron","required","invalid","outline","SharedTasks","Component","component","rest","render","RouterFull","exact","path","LoginPage","RegisterPage","HomePage","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2efa3434.chunk.js","sourcesContent":["export const LOGIN = \"LOGIN\"\nexport const LOGOUT = \"LOGOUT\"\nexport const GET_ALL_USERS = \"GET_ALL_USERS\"","export const GET_TASKS = \"GET_TASKS\"\nexport const GET_CATEGORIES = \"GET_CATEGORIES\"\nexport const GET_SHARED_TASKS = \"GET_SHARED_TASKS\"","import { LOGOUT } from \"../User/types\";\nimport { GET_TASKS, GET_CATEGORIES, GET_SHARED_TASKS } from \"./types\";\n\nconst taskInitialState = {\n\ttasks: [],\n\tcategories: []\n};\n\nexport function tasksReducer(state = taskInitialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_TASKS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttasks: action.tasks,\n\t\t\t};\n\t\tcase GET_CATEGORIES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: action.categories,\n\t\t\t};\n\n\t\tcase LOGOUT:\n\t\t\treturn {\n\t\t\t\t...taskInitialState,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst sharedTasksInitialState = []\n\nexport function sharedTasksReducer(state = sharedTasksInitialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_SHARED_TASKS:\n\t\t\treturn [...action.payload]\n\n\t\tcase LOGOUT:\n\t\t\treturn []\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { LOGIN, LOGOUT, GET_ALL_USERS } from \"./types\";\n\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? {\n\ttoken: user.token,\n\tusername: user.username,\n\temail: user.email,\n\tauthenticated: true,\n}  : {\n\ttoken: undefined,\n\tusername: undefined,\n\temail: undefined,\n\tauthenticated: false,\n};\n\nexport function userReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase LOGIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload,\n\t\t\t\tauthenticated: true,\n\t\t\t};\n\n\t\tcase LOGOUT:\n\t\t\treturn {\n\t\t\t\ttoken: undefined,\n\t\t\t\tusername: undefined,\n\t\t\t\temail: undefined,\n\t\t\t\tauthenticated: false\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst allUsersInitialState = [];\n\nexport function allUsersReducer(state = allUsersInitialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_ALL_USERS:\n\t\t\treturn [...action.payload];\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createBrowserHistory } from 'history'\nexport const history = createBrowserHistory()\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { sharedTasksReducer, tasksReducer } from \"./Task/reducers\";\nimport { allUsersReducer, userReducer } from \"./User/reducers\";\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { history } from \"../helpers/browserHistory\";\n\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    task: tasksReducer,\n    allUsers: allUsersReducer,\n    sharedTasks: sharedTasksReducer,\n    router: connectRouter(history)\n});\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk, routerMiddleware(history)),\n));\n\nexport default store;\n","class API {\n\tconstructor(method, url, config) {\n        this.token = localStorage.getItem('Token')\n        // https://serene-mesa-14389.herokuapp.com/\n\t\treturn fetch(`http://127.0.0.1:8000/${url}`, {\n\t\t\tmethod: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${this.token}`,\n            },\n            ...config\n        }).then(response => {\n            if (!response.ok) {\n                return Promise.reject(response.statusText);\n            }\n            return response.json();\n        })\n\t}\n}\n\nexport default API;","import API from './index'\n\nconst todoList = () => {\n\treturn new API('GET', 'api/task-list/');\n};\n\nconst addTodo = (formData) => {\n\treturn new API('POST', 'api/task-create/', { body: JSON.stringify(formData)});\n};\n\nconst getTaskCategories = () => {\n\treturn new API('GET', 'api/get-task-categories/');\n};\n\nconst createTaskCategory = (formData) => {\n\treturn new API('POST', 'api/create-task-category/', { body: JSON.stringify(formData)});\n};\n\nconst toggleTaskCompleted = (taskId) => {\n\treturn new API('PATCH', `api/toggle-task-completed/${taskId}/`);\n};\n\nconst updateTask = (taskId, formData) => {\n\treturn new API('POST', `api/task-update/${taskId}/`, { body: JSON.stringify(formData)});\n};\n\nconst deleteTask = (taskId) => {\n\treturn new API('DELETE', `api/task-delete/${taskId}/`);\n};\n\nconst shareTask = (formData) => {\n\treturn new API('POST', `api/share-task/`, { body: JSON.stringify(formData)});\n};\n\nconst getSharedTaskList = (formData) => {\n\treturn new API('GET', `api/shared-tasks-list/`);\n};\n\nexport const todoApis = {\n    todoList,\n    addTodo,\n    getTaskCategories,\n    createTaskCategory,\n    toggleTaskCompleted,\n    updateTask,\n    deleteTask,\n    shareTask,\n    getSharedTaskList\n}","import API from './index'\n\nconst register = (formData) => {\n\treturn new API('POST', 'api/register/', { body: JSON.stringify(formData)});\n};\n\nconst login = (formData) => {\n\treturn new API('POST', 'api/login/', { body: JSON.stringify(formData)});\n};\n\nconst logout = () => {\n\treturn new API('GET', 'api/logout/');\n};\n\nconst getUserList = () => {\n    return new API('GET', 'api/user-list/');\n}\n\nexport const AccountApis = {\n    register,\n    login,\n    logout,\n    getUserList\n}","import { LOGIN, LOGOUT, GET_ALL_USERS } from \"./types\";\n\nexport const loginAction = (user) => {\n    localStorage.setItem('loggedIn', 'true');\n    localStorage.setItem('Token', (user.token || ''));\n    localStorage.setItem('user', JSON.stringify(user));\n    return {\n        type: LOGIN,\n        payload: user,\n    }\n}\n\nexport const logoutAction = () => {\n    localStorage.clear();\n    return {\n        type: LOGOUT,\n    }\n}\n\nexport const getAllUsersAction = (users) => {\n    return {\n        type: GET_ALL_USERS,\n        payload: users\n    }\n}\n\nexport const USER_ACTION = {\n    loginAction,\n    logoutAction,\n    getAllUsersAction\n}","import React, { useState } from \"react\";\nimport {\n\tCollapse,\n\tNavbar,\n\tNavbarToggler,\n\tNavbarBrand,\n\tNav,\n\tNavItem,\n    NavbarText,\n    Button\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { AccountApis } from \"../api/Account\";\nimport { logoutAction } from \"../store/User/action\";\nimport { connect } from \"react-redux\";\nimport { push } from 'connected-react-router'\n\nconst TopNavbar = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    \n    const logout = () => {\n\t\tAccountApis.logout().then(() => {\n            const { logoutDispatch, historyPush } = props\n            historyPush('/login')\n            logoutDispatch()\n        });\n    };\n\treturn (\n\t\t<div>\n\t\t\t<Navbar color=\"light\" light expand=\"md\">\n\t\t\t\t<NavbarBrand href=\"/\">TODO APP</NavbarBrand>\n\t\t\t\t<NavbarToggler onClick={toggle} />\n\t\t\t\t<Collapse isOpen={isOpen} navbar>\n\t\t\t\t\t<Nav className=\"d-flex mr-auto\" navbar>\n\t\t\t\t\t\t<NavItem className=\"ml-2\">\n\t\t\t\t\t\t\t<Link className=\"nav-link text-primary\" to=\"/\">My Tasks</Link>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t<NavItem className=\"ml-2\">\n\t\t\t\t\t\t\t<Link className=\"nav-link text-primary\" to=\"/shared-tasks\">Shared Tasks</Link>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<NavbarText>\n                        Hi {props.user.username}\n                        <Button color=\"link\" onClick={logout}>Log Out</Button>\n                    </NavbarText>\n\t\t\t\t</Collapse>\n\t\t\t</Navbar>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuser: state.user,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    logoutDispatch: () => dispatch(logoutAction()),\n    historyPush: (route) => dispatch(push(route))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavbar);","import { GET_TASKS, GET_CATEGORIES, GET_SHARED_TASKS } from \"./types\";\n\nexport const setTasksAction = (tasks) => {\n    return {\n        type: GET_TASKS,\n        tasks,\n    }\n}\n\nexport const setCategoriesAction = (categories) => {\n    return {\n        type: GET_CATEGORIES,\n        categories\n    }\n}\n\nexport const setSharedTasksAction = (sharedTasks) => {\n    return {\n        type: GET_SHARED_TASKS,\n        payload: sharedTasks\n    }\n}","import React, { useEffect, useState, useCallback } from \"react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { Label } from \"reactstrap\";\nimport { todoApis } from \"../api/Todos\";\nimport { connect } from \"react-redux\";\nimport { setCategoriesAction } from \"../store/Task/actions\";\n\nfunction TaskCategories({ handleCategorySelect, hideLabel, selectedCategory, ...props }) {\n    const [isLoading, setIsloading] = useState(false)\n    const [value, setValue] = useState(selectedCategory)\n\n    const customizeOptions = (categories) => {\n        const customizedOptions = categories.map(opt => ({\n            label: opt.name,\n            value: opt.id\n        }))\n        return customizedOptions\n    }\n    \n    const getAllCategories = () => {\n        const { setCategoriesDispatch } = props\n        setIsloading(true)\n        todoApis.getTaskCategories()\n        .then(res => {\n            setIsloading(false)\n            setCategoriesDispatch(customizeOptions(res))\n        }).catch(err => console.log(err))\n    }\n\n\tconst handleChange = (newValue, actionMeta) => {\n        setValue(newValue)\n        handleCategorySelect((previousValues) => ({ \n            ...previousValues,\n            category_id: newValue && newValue.value\n         }))\n    };\n    \n\tconst handleCreate = (inputValue) => {\n        setIsloading(true)\n        todoApis.createTaskCategory({ name: inputValue })\n        .then(res => {\n            getAllCategories()\n            setValue({ label: res.category.name, value: res.category.id})\n            handleCategorySelect((previousValues) => ({ \n                ...previousValues,\n                category_id: res.category.id\n             }))\n            setIsloading(false)\n        }).catch(err => console.log(err))\n    };\n    \n    useEffect(() => {\n        const { categories } = props\n        if(categories.length === 0){\n            getAllCategories()\n        }\n    }, [])\n\n\treturn (\n\t\t<>\n            {!hideLabel && <Label htmlFor=\"categorySelect\">Select or Create Category</Label>}\n\t\t\t<CreatableSelect\n                id=\"categorySelect\"\n\t\t\t\tisClearable\n\t\t\t\tisDisabled={isLoading}\n\t\t\t\tisLoading={isLoading}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tonCreateOption={handleCreate}\n\t\t\t\toptions={props.categories}\n                value={value}\n                placeholder=\"start typing..\"\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcategories: state.task.categories,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    setCategoriesDispatch: (categories) => dispatch(setCategoriesAction(categories))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskCategories);\n","import React, { useState } from \"react\";\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { todoApis } from \"../api/Todos\";\nimport TaskCategories from \"./TaskCategories\";\n\nconst TaskForm = ({ submitCallback }) => {\n\tconst [formData, setFormData] = useState({\n\t\ttitle: \"\",\n\t\tpriority: \"normal\",\n\t\tdescription: \"\",\n\t\tcategory_id: \"\",\n\t});\n\n\tconst handleChange = (e) => {\n\t\tconst value = e.target.value;\n\t\tconst name = e.target.name;\n\n\t\tsetFormData({\n\t\t\t...formData,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(formData);\n\t\ttodoApis.addTodo(formData).then((res) => {\n\t\t\tsubmitCallback();\n\t\t\tsetFormData({\n\t\t\t\ttitle: \"\",\n\t\t\t\tpriority: \"normal\",\n\t\t\t\tdescription: \"\",\n\t\t\t\tcategory_id: \"\",\n\t\t\t});\n\t\t\tconsole.log(res);\n\t\t});\n\t};\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit}>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"taskTitle\">Title</Label>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"title\"\n\t\t\t\t\tid=\"taskTitle\"\n\t\t\t\t\tplaceholder=\"title..\"\n\t\t\t\t\tvalue={formData.title}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</FormGroup>\n\t\t\t<Row form>\n\t\t\t\t<Col md={6}>\n\t\t\t\t\t<TaskCategories handleCategorySelect={setFormData} />\n\t\t\t\t</Col>\n\t\t\t\t<Col md={6}>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Label for=\"taskPriority\">Priority</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"select\"\n\t\t\t\t\t\t\tname=\"priority\"\n\t\t\t\t\t\t\tid=\"taskPriority\"\n\t\t\t\t\t\t\tvalue={formData.priority}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"low\">Low</option>\n\t\t\t\t\t\t\t<option value=\"normal\">Normal</option>\n\t\t\t\t\t\t\t<option value=\"high\">High</option>\n\t\t\t\t\t\t</Input>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<FormGroup>\n\t\t\t\t<Label for=\"taskDescription\">Description</Label>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tid=\"taskDescription\"\n\t\t\t\t\tplaceholder=\"description for your task..\"\n\t\t\t\t\tstyle={{ minHeight: \"150px\", whiteSpace: \"pre-wrap\" }}\n\t\t\t\t\tvalue={formData.description}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</FormGroup>\n\t\t\t<Button color=\"primary\">Save</Button>\n\t\t</Form>\n\t);\n};\n\nexport default TaskForm;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n\tButton,\n\tCard,\n\tCardBody,\n\tInput,\n\tInputGroup,\n\tInputGroupAddon,\n\tInputGroupText,\n\tListGroup,\n\tListGroupItem,\n\tPopover,\n\tSpinner,\n} from \"reactstrap\";\nimport { todoApis } from \"../api/Todos\";\n\nconst ShareTaskPopover = ({ taskId, ...props }) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst [selectedUser, setSelectedUser] = useState(null);\n\tconst [fetching, setFetching] = useState(\"idle\");\n\tconst [filteredUsers, setFilteredUsers] = useState(props.allUsers);\n\tconst [userFilter, setUserFilter] = useState(\"\");\n\n\tconst togglePopover = () => setIsOpen(!isOpen);\n\n\tconst handleSelectUser = (userId) => {\n\t\tsetSelectedUser(userId);\n\t};\n\n\tconst handleShareTask = () => {\n\t\tsetFetching(\"loading\");\n\t\ttodoApis\n\t\t\t.shareTask({\n\t\t\t\ttaskId,\n\t\t\t\ttaskToId: selectedUser,\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\ttogglePopover();\n\t\t\t\tsetFetching(\"success\");\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetFetching(\"error\");\n\t\t\t});\n\t};\n\n\tconst handleFilterChange = (e) => {\n\t\tlet filterText = e.target.value;\n\t\tconst filtered = props.allUsers.filter((user) => {\n\t\t\tconst searchCheck =\n\t\t\t\tuser.username.toLowerCase().includes(filterText.toLowerCase()) ||\n\t\t\t\tfilterText === \"\";\n\t\t\treturn searchCheck;\n\t\t});\n\t\tsetFilteredUsers(filtered);\n\t\tsetUserFilter(filterText);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Button id={\"sharePopover\" + taskId} color=\"info\" onClick={togglePopover}>\n\t\t\t\t<i className=\"fa fa-share\"></i> Share\n\t\t\t</Button>\n\t\t\t<Popover\n\t\t\t\ttarget={\"#sharePopover\" + taskId}\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\ttoggle={togglePopover}\n\t\t\t\ttrigger=\"legacy\"\n\t\t\t>\n\t\t\t\t<Card style={{ width: \"300px\" }}>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t<div className=\"mb-2\">\n\t\t\t\t\t\t\t<h5>Select User: </h5>\n\t\t\t\t\t\t\t<InputGroup className=\"mb-2\">\n\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\n\t\t\t\t\t\t\t\t\t<InputGroupText>\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-search text-info\"></i>\n\t\t\t\t\t\t\t\t\t</InputGroupText>\n\t\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tonChange={handleFilterChange}\n\t\t\t\t\t\t\t\t\tvalue={userFilter}\n\t\t\t\t\t\t\t\t\tplaceholder=\"find username..\"\n\t\t\t\t\t\t\t\t\tname=\"userFilterInput\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t<ListGroup style={{ maxHeight: \"300px\", overflow: \"scroll\" }}>\n\t\t\t\t\t\t\t\t{filteredUsers.map((user) => (\n\t\t\t\t\t\t\t\t\t<ListGroupItem\n\t\t\t\t\t\t\t\t\t\tkey={\"user\" + user.id}\n\t\t\t\t\t\t\t\t\t\taction\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleSelectUser(user.id)}\n\t\t\t\t\t\t\t\t\t\tcolor={selectedUser === user.id ? \"primary\" : \"\"}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{user.username}\n\t\t\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={fetching === \"loading\"}\n\t\t\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\t\t\tonClick={handleShareTask}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{fetching === \"loading\" ? (\n\t\t\t\t\t\t\t\t<Spinner color=\"white\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<span>Share</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Card>\n\t\t\t</Popover>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tallUsers: state.allUsers,\n\t};\n};\n\nexport default connect(mapStateToProps)(ShareTaskPopover);\n","import React from \"react\";\nimport { useState } from \"react\";\nimport {\n\tFormGroup,\n\tLabel,\n\tInput,\n\tButton,\n\tBadge,\n\tSpinner,\n\tPopoverBody,\n\tPopover,\n} from \"reactstrap\";\nimport { todoApis } from \"../api/Todos\";\nimport ShareTaskPopover from \"./ShareTaskPopover\";\nimport TaskCategories from \"./TaskCategories\";\n\nconst TaskItem = ({ taskDetails, getTaskList, taskSharedBy }) => {\n\tconst [taskData, setTaskData] = useState(taskDetails);\n\tconst {\n\t\tid,\n\t\tcategory,\n\t\tcompleted,\n\t\tdescription,\n\t\tdue_date,\n\t\tpriority,\n\t\ttitle,\n\t} = taskData;\n\n\tconst [isEditView, setIsEditView] = useState(false);\n\tconst [deleteTaskPopover, setDeleteTaskPopover] = useState(false);\n\tconst [fetching, setFetching] = useState(\"idle\");\n\tconst [formData, setFormData] = useState({\n\t\ttitle: title,\n\t\tpriority: priority,\n\t\tdescription: description,\n\t\tcategory_id: category && category.id,\n\t});\n\n\tconst handleChange = (e) => {\n\t\tconst value = e.target.value;\n\t\tconst name = e.target.name;\n\n\t\tsetFormData({\n\t\t\t...formData,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\tconst handleEditSubmit = () => {\n\t\tsetFetching(\"loading\");\n\t\ttodoApis\n\t\t\t.updateTask(id, formData)\n\t\t\t.then((res) => {\n\t\t\t\tsetTaskData(res);\n\t\t\t\tsetIsEditView(false);\n\t\t\t\tsetFetching(\"success\");\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetFetching(\"error\");\n\t\t\t});\n\t};\n\n\tconst handleTaskComplete = () => {\n\t\tsetFetching(\"loading\");\n\t\ttodoApis\n\t\t\t.toggleTaskCompleted(id)\n\t\t\t.then((res) => {\n\t\t\t\tsetTaskData(res);\n\t\t\t\tsetFetching(\"success\");\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetFetching(\"error\");\n\t\t\t});\n\t};\n\n\tconst handleDeleteTaskPopover = () => {\n\t\tsetDeleteTaskPopover(!deleteTaskPopover);\n\t};\n\n\tconst handleDeleteTask = () => {\n\t\tsetFetching(\"loading\");\n\t\thandleDeleteTaskPopover()\n\t\ttodoApis.deleteTask(id).then((res) => {\n\t\t\tgetTaskList();\n\t\t\tsetFetching(\"success\");\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"position-relative shadow border-left-info m-2\">\n\t\t\t{fetching === \"loading\" && (\n\t\t\t\t<div className=\"blurred-container-inner\">\n\t\t\t\t\t<Spinner type=\"grow\" style={{ zIndex: \"3\" }} color=\"warning\" />\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<div className={`${fetching === \"loading\" && \"blurred-container\"}`}>\n\t\t\t\t{!isEditView ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"d-flex bg-info align-items-center\">\n\t\t\t\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t\t\t\t{!taskSharedBy && (\n\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\t\t\tcolor={completed ? \"success\" : \"secondary\"}\n\t\t\t\t\t\t\t\t\t\tonClick={handleTaskComplete}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{completed ? (\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-check-square fa-2x\"></i>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-square fa-2x\"></i>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"ml-2\">\n\t\t\t\t\t\t\t\t<h4 className=\"text-white\">{title}</h4>\n\t\t\t\t\t\t\t\t<h6 className=\"text-white\">\n\t\t\t\t\t\t\t\t\t{category && <small>Category: {category.name}</small>}\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{taskSharedBy ? (\n\t\t\t\t\t\t\t\t<div className=\"ml-auto mr-2\">\n\t\t\t\t\t\t\t\t\t<span className=\"text-white\">Shared From: </span>\n\t\t\t\t\t\t\t\t\t<Badge color=\"primary\">{taskSharedBy.username}</Badge>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className=\"d-flex ml-auto\">\n\t\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t<ShareTaskPopover taskId={id} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"ml-2\">\n\t\t\t\t\t\t\t\t\t\t<Button color=\"warning\" onClick={() => setIsEditView(true)}>\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-edit text-white\"></i>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mx-2\">\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleDeleteTaskPopover}\n\t\t\t\t\t\t\t\t\t\t\tid={\"delete-task-button\" + id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash\"></i>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\t\t\t\t\tisOpen={deleteTaskPopover}\n\t\t\t\t\t\t\t\t\t\t\ttrigger=\"legacy\"\n\t\t\t\t\t\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\t\t\t\t\t\ttarget={\"delete-task-button\" + id}\n\t\t\t\t\t\t\t\t\t\t\ttoggle={handleDeleteTaskPopover}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<PopoverBody className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-exclamation text-danger fa-2x\"></i> <br />\n\t\t\t\t\t\t\t\t\t\t\t\tAre you sure to delete this task?\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between mt-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleDeleteTaskPopover}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button color=\"danger\" onClick={handleDeleteTask}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</PopoverBody>\n\t\t\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tcolor={\n\t\t\t\t\t\t\t\tpriority === \"high\"\n\t\t\t\t\t\t\t\t\t? \"danger\"\n\t\t\t\t\t\t\t\t\t: priority === \"normal\"\n\t\t\t\t\t\t\t\t\t? \"info\"\n\t\t\t\t\t\t\t\t\t: \"secondary\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName=\"float-right mr-4 mt-2\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPriority: {priority}\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t<div className=\"mt-2 p-4\">\n\t\t\t\t\t\t\t<p style={{ whiteSpace: \"pre-wrap\" }}>{description}</p>\n\t\t\t\t\t\t\t<Badge color=\"light\" className=\"float-right\">\n\t\t\t\t\t\t\t\tDue Date: {due_date}\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"d-flex bg-info align-items-center\">\n\t\t\t\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\t\tcolor={completed ? \"success\" : \"secondary\"}\n\t\t\t\t\t\t\t\t\tonClick={handleTaskComplete}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{completed ? (\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-check-square fa-2x\"></i>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-square fa-2x\"></i>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"my-2\">\n\t\t\t\t\t\t\t\t<div className=\"row mb-2\">\n\t\t\t\t\t\t\t\t\t<div className=\"col-4\">\n\t\t\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-white font-weight-bold\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor={\"editTitleInput\" + id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tid={\"editTitleInput\" + id}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"title..\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={formData.title}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col-4\">\n\t\t\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-white font-weight-bold\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor={\"editCategorySelect\" + id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCategory\n\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t\t\t\t\t\t<TaskCategories\n\t\t\t\t\t\t\t\t\t\t\tid={\"editCategorySelect\" + id}\n\t\t\t\t\t\t\t\t\t\t\thideLabel\n\t\t\t\t\t\t\t\t\t\t\tselectedCategory={{\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: category && category.name,\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: category && category.id,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\thandleCategorySelect={setFormData}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"ml-auto\">\n\t\t\t\t\t\t\t\t<Button color=\"success\" onClick={handleEditSubmit}>\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-check\"></i>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"mx-2\">\n\t\t\t\t\t\t\t\t<Button color=\"danger\" onClick={() => setIsEditView(false)}>\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-times\"></i>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FormGroup className=\"float-right mr-4\" style={{ width: \"100px\" }}>\n\t\t\t\t\t\t\t<Label for=\"taskPriority\">Priority</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"select\"\n\t\t\t\t\t\t\t\tname=\"priority\"\n\t\t\t\t\t\t\t\tid=\"taskPriority\"\n\t\t\t\t\t\t\t\tvalue={formData.priority}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"low\">Low</option>\n\t\t\t\t\t\t\t\t<option value=\"normal\">Normal</option>\n\t\t\t\t\t\t\t\t<option value=\"high\">High</option>\n\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<div className=\"mt-2 p-4\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\tid=\"taskDescription\"\n\t\t\t\t\t\t\t\tplaceholder=\"description for your task..\"\n\t\t\t\t\t\t\t\tstyle={{ minHeight: \"150px\", whiteSpace: \"pre-wrap\" }}\n\t\t\t\t\t\t\t\tvalue={formData.description}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TaskItem;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Alert, Spinner } from \"reactstrap\";\nimport { AccountApis } from \"../api/Account\";\nimport { todoApis } from \"../api/Todos\";\nimport { setSharedTasksAction, setTasksAction } from \"../store/Task/actions\";\nimport { getAllUsersAction } from \"../store/User/action\";\nimport TaskItem from \"./TaskItem\";\n\nconst TaskList = ({ sharedTasksView, ...props }) => {\n\tconst [fetching, setFetching] = useState(\"idle\");\n\n\tconst handleGetTasks = () => {\n\t\tconst { setTasksDispatch } = props;\n\t\tsetFetching(\"loading\");\n\t\ttodoApis\n\t\t\t.todoList()\n\t\t\t.then((res) => {\n\t\t\t\tsetFetching(\"success\");\n\t\t\t\tsetTasksDispatch(res);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetFetching(\"error\");\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tconst handleGetSharedTasks = () => {\n\t\tconst { setSharedTasksDispatch } = props\n\t\tsetFetching(\"loading\");\n\t\ttodoApis\n\t\t\t.getSharedTaskList()\n\t\t\t.then((res) => {\n\t\t\t\tsetFetching(\"success\");\n\t\t\t\tsetSharedTasksDispatch(res);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetFetching(\"error\");\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tconst handleGetUsers = () => {\n\t\tconst { getAllUsersDispatch } = props;\n\t\tAccountApis.getUserList().then((res) => {\n\t\t\tgetAllUsersDispatch(res);\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\thandleGetUsers();\n\t\tif (sharedTasksView) {\n\t\t\thandleGetSharedTasks();\n\t\t} else {\n\t\t\thandleGetTasks();\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<div className=\"task-container\">\n\t\t\t{fetching === \"loading\" && <Spinner className=\"d-flex mx-auto my-2\" color=\"primary\" />}\n\t\t\t{sharedTasksView\n\t\t\t\t? props.sharedTasks.map((sharedTask) => (\n\t\t\t\t\t\t<TaskItem\n\t\t\t\t\t\t\tgetTaskList={handleGetTasks}\n\t\t\t\t\t\t\ttaskDetails={sharedTask.task}\n\t\t\t\t\t\t\ttaskSharedBy={sharedTask.shared_by}\n\t\t\t\t\t\t\tkey={\"task\" + sharedTask.task.id}\n\t\t\t\t\t\t/>\n\t\t\t\t  ))\n\t\t\t\t: props.myTasks.map((task) => (\n\t\t\t\t\t\t<TaskItem\n\t\t\t\t\t\t\tgetTaskList={handleGetTasks}\n\t\t\t\t\t\t\ttaskDetails={task}\n\t\t\t\t\t\t\tkey={\"task\" + task.id}\n\t\t\t\t\t\t/>\n\t\t\t\t  ))}\n\t\t\t{!sharedTasksView &&\n\t\t\t\tprops.myTasks.length === 0 &&\n\t\t\t\tfetching === \"success\" && (\n\t\t\t\t\t<Alert className=\"text-center\" color=\"info\">\n\t\t\t\t\t\t<i className=\"fa fa-info fa-4x\"></i> <br /> You haven't created any\n\t\t\t\t\t\ttask yet. Start adding by clicking Add Task button.\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\t\t\t{sharedTasksView &&\n\t\t\t\tprops.sharedTasks.length === 0 &&\n\t\t\t\tfetching === \"success\" && (\n\t\t\t\t\t<Alert className=\"text-center\" color=\"info\">\n\t\t\t\t\t\t<i className=\"fa fa-info fa-4x\"></i> <br /> You haven't recevied any\n\t\t\t\t\t\ttask from other users yet.{\" \"}\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tmyTasks: state.task.tasks,\n\t\tsharedTasks: state.sharedTasks,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tsetTasksDispatch: (tasks) => dispatch(setTasksAction(tasks)),\n\tgetAllUsersDispatch: (users) => dispatch(getAllUsersAction(users)),\n\tsetSharedTasksDispatch: (tasks) => dispatch(setSharedTasksAction(tasks)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\n","import React, { useState } from \"react\";\nimport { Badge, Button, Collapse, Spinner } from \"reactstrap\";\nimport { todoApis } from \"../api/Todos\";\nimport TopNavbar from \"../components/Navbar\";\nimport TaskForm from \"../components/TaskForm\";\nimport { connect } from \"react-redux\";\nimport { setTasksAction } from \"../store/Task/actions\";\nimport TaskList from \"../components/TaskList\";\n\nfunction Home(props) {\n\tconst [collapseOpen, setCollapseOpen] = useState(false);\n\tconst [fetching, setFetching] = useState(\"idle\");\n\tconst handleGetTasks = () => {\n\t\tconst { setTasks } = props;\n\t\tsetFetching(\"loading\");\n\t\ttodoApis\n\t\t\t.todoList()\n\t\t\t.then((res) => {\n\t\t\t\tsetTasks(res);\n\t\t\t\tsetFetching(\"success\");\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetFetching(\"error\");\n\t\t\t});\n\t};\n\n\tconst toggleCollapse = () => {\n\t\tsetCollapseOpen(!collapseOpen);\n\t};\n\n\tconst handleNewTaskCreated = () => {\n\t\thandleGetTasks();\n\t\ttoggleCollapse();\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<TopNavbar />\n\t\t\t<div className=\"card mt-4\">\n\t\t\t\t<div className=\"card-header d-flex\">\n\t\t\t\t\t<h2 className=\"text-primary\">\n\t\t\t\t\t\t<Badge color=\"\" pill>\n\t\t\t\t\t\t\t<i className=\"fa fa-tasks\"></i>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\tMy Tasks\n\t\t\t\t\t</h2>\n\t\t\t\t\t<Button className=\"ml-auto\" color=\"success\" onClick={toggleCollapse}>\n\t\t\t\t\t\t<i className=\"fa fa-plus fa-fw\"></i> Add Task\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<Collapse isOpen={collapseOpen}>\n\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<div className=\"card-body border-left-primary p-4\">\n\t\t\t\t\t\t\t<h4 className=\"text-primary\">New Task</h4>\n\t\t\t\t\t\t\t<TaskForm submitCallback={handleNewTaskCreated} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Collapse>\n\t\t\t\t<div className=\"card-body m-0 p-0\">\n\t\t\t\t\t{fetching === \"loading\" && (\n\t\t\t\t\t\t<Spinner className=\"d-flex mx-auto my-2\" color=\"primary\" />\n\t\t\t\t\t)}\n\t\t\t\t\t<TaskList />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n// const mapStateToProps = (state) => {\n// \tconsole.log(state, \"redux store\");\n// \treturn {\n// \t\tcategories: state.task.categories,\n// \t};\n// };\n\nconst mapDispatchToProps = (dispatch) => ({\n\tsetTasks: (tasks) => dispatch(setTasksAction(tasks)),\n});\n\nexport default connect(null, mapDispatchToProps)(Home);\n","import React, { useState } from \"react\";\nimport {\n\tButton,\n\tForm,\n\tFormGroup,\n\tLabel,\n\tInput,\n\tAlert,\n\tCardBody,\n\tCard,\n\tJumbotron,\n    Spinner,\n} from \"reactstrap\";\nimport { AccountApis } from \"../api/Account\";\nimport { connect } from \"react-redux\";\nimport { loginAction } from \"../store/User/action\";\nimport { Link } from \"react-router-dom\";\nimport { push } from \"connected-react-router\";\n\nconst Login = (props) => {\n\tconst [formData, setFormData] = useState({\n\t\tusername: \"\",\n\t\tpassword: \"\",\n\t});\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [fetching, setFetching] = useState(\"idle\");\n\n\tconst handleChange = (e) => {\n\t\tconst value = e.target.value;\n\t\tconst name = e.target.name;\n\n\t\tsetFormData({\n\t\t\t...formData,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\tconst { loginDispatch, historyPush } = props;\n        e.preventDefault();\n        setFetching(\"loading\");\n\t\tAccountApis.login(formData)\n\t\t\t.then((res) => {\n\t\t\t\tsetErrorMessage(null);\n\t\t\t\tloginDispatch(res);\n                setFetching(\"success\");\n                historyPush(\"/\");\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n                setErrorMessage(\"upps, password or username not correct..\");\n                setFetching(\"error\");\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"d-flex\" style={{ height: \"80vh\" }}>\n\t\t\t<div className=\"mx-auto my-auto\">\n\t\t\t\t<Card>\n\t\t\t\t\t<Jumbotron className=\"mb-0\">\n\t\t\t\t\t\t<h1 className=\"text-center\">TODO APP</h1>\n\t\t\t\t\t\t<p className=\"text-center\">\n\t\t\t\t\t\t\tFullstack todo app, created for interview.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Jumbotron>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tclassName=\"mx-auto\"\n\t\t\t\t\t\t\tstyle={{ width: \"300px\" }}\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h3 className=\"text-primary text-center\">Login</h3>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"formUsername\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"formUsername\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"username..\"\n\t\t\t\t\t\t\t\t\tvalue={formData.username}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tinvalid={errorMessage !== null}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"formPassword\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\tid=\"formPassword\"\n\t\t\t\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tinvalid={errorMessage !== null}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t{errorMessage && <Alert color=\"danger\">{errorMessage}</Alert>}\n\t\t\t\t\t\t\t<Button className=\"w-100\" color=\"primary\" disabled={fetching==='loading'}>\n\t\t\t\t\t\t\t\t{fetching === 'loading' ? <Spinner /> : 'Login'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t<h6 className=\"text-center my-2\">OR</h6>\n\t\t\t\t\t\t<Link className=\"button-link\" to=\"/register\">\n\t\t\t\t\t\t\t<Button className=\"w-100\" color=\"success\" outline>\n\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tloginDispatch: (user) => dispatch(loginAction(user)),\n\thistoryPush: (route) => dispatch(push(route)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n\tButton,\n\tForm,\n\tFormGroup,\n\tLabel,\n\tInput,\n\tCard,\n\tJumbotron,\n\tCardBody,\n\tAlert,\n\tSpinner,\n} from \"reactstrap\";\nimport { AccountApis } from \"../api/Account\";\nimport { loginAction } from \"../store/User/action\";\nimport { push } from \"connected-react-router\";\n\nconst Register = (props) => {\n\tconst [formData, setFormData] = useState({\n\t\tusername: \"\",\n\t\tpassword: \"\",\n\t\temail: \"\",\n\t});\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [fetching, setFetching] = useState(\"idle\");\n\n\tconst handleChange = (e) => {\n\t\tconst value = e.target.value;\n\t\tconst name = e.target.name;\n\n\t\tsetFormData({\n\t\t\t...formData,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tlocalStorage.setItem(\"token\", \"\");\n\t\tsetFetching(\"loading\");\n\t\tAccountApis.register(formData)\n\t\t\t.then((res) => {\n\t\t\t\tconst { loginDispatch, historyPush } = props;\n\t\t\t\tloginDispatch(res);\n\t\t\t\tsetErrorMessage(null);\n\t\t\t\tsetFetching(\"success\");\n\t\t\t\thistoryPush(\"/\");\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\t\"Username or password is not valid. Please try again..\"\n\t\t\t\t);\n\t\t\t\tsetFetching(\"error\");\n\t\t\t});\n\t};\n\treturn (\n\t\t<div className=\"d-flex\" style={{ height: \"80vh\" }}>\n\t\t\t<div className=\"mx-auto my-auto\">\n\t\t\t\t<Card>\n\t\t\t\t\t<Jumbotron className=\"mb-0\">\n\t\t\t\t\t\t<h1 className=\"text-center\">TODO APP</h1>\n\t\t\t\t\t\t<p className=\"text-center\">\n\t\t\t\t\t\t\tFullstack todo app, created for interview.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Jumbotron>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t<h3 className=\"text-success text-center\">Register</h3>\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tclassName=\"mx-auto\"\n\t\t\t\t\t\t\tstyle={{ width: \"300px\" }}\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"formUsername\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"formUsername\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"username..\"\n\t\t\t\t\t\t\t\t\tvalue={formData.username}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"formEmail\">Email</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"formEmail\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"email (optional..)\"\n\t\t\t\t\t\t\t\t\tvalue={formData.email}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"formPassword\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\tid=\"formPassword\"\n\t\t\t\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t{errorMessage && <Alert color=\"danger\">{errorMessage}</Alert>}\n\t\t\t\t\t\t\t<Button color=\"success\" className=\"w-100\">\n\t\t\t\t\t\t\t\t{fetching === \"loading\" ? <Spinner /> : \"Register\"}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t<div className=\"my-2 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\tAlready have an account?\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Link className=\"button-link\" to=\"/login\">\n\t\t\t\t\t\t\t<Button className=\"w-100\" color=\"primary\" outline>\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tloginDispatch: (user) => dispatch(loginAction(user)),\n\thistoryPush: (route) => dispatch(push(route)),\n});\n\nexport default connect(null, mapDispatchToProps)(Register);\n","import React from \"react\";\nimport { Badge } from \"reactstrap\";\nimport TopNavbar from \"../components/Navbar\";\nimport TaskList from \"../components/TaskList\";\n\nfunction SharedTasks() {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<TopNavbar />\n\t\t\t<div className=\"card mt-4\">\n\t\t\t\t<div className=\"card-header d-flex\">\n\t\t\t\t\t<h2 className=\"text-primary\">\n\t\t\t\t\t\t<Badge color=\"\" pill>\n\t\t\t\t\t\t\t<i className=\"fa fa-tasks\"></i>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\tShared Tasks From Other Users\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card-body m-0 p-0\">\n\t\t\t\t\t<TaskList \n                        sharedTasksView={true}\n                    />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default SharedTasks\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst AuthRoute = ({ component: Component, ...rest }) => {\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={(props) =>\n\t\t\t\trest.user.authenticated === true ? (\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t) : (\n\t\t\t\t\t<Redirect to=\"/login\" />\n\t\t\t\t)\n\t\t\t}\n\t\t/>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tuser: state.user,\n});\n\nexport default connect(mapStateToProps)(AuthRoute);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"./Home\";\nimport LoginPage from \"./Login\";\nimport RegisterPage from \"./Register\";\nimport SharedTasks from \"./SharedTasks\";\nimport AuthRoute from \"../helpers/AuthRoute\";\n\nconst RouterFull = () => (\n\t<Switch>\n\t\t<Route exact path=\"/login\" component={LoginPage} />\n\t\t<Route exact path=\"/register\" component={RegisterPage} />\n\t\t<AuthRoute exact path=\"/\" component={HomePage} />\n\t\t<AuthRoute exact path=\"/shared-tasks\" component={SharedTasks} />\n\t</Switch>\n);\n\nexport default RouterFull;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport RouterFull from \"./views\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"./helpers/browserHistory\";\n\nconst App = (props) => {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<ConnectedRouter history={history}>\n\t\t\t\t<RouterFull />\n\t\t\t</ConnectedRouter>\n\t\t</Provider>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t// <React.StrictMode>\n\t\t<App />,\n\t// </React.StrictMode>, \n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}